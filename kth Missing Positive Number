/* https://youtu.be/88k8xa-pSrM

Here we will use binary search to eliminate the part of array we don't need. 
 We will compute the count of missing numbers between first and the last element of the part of array under consideration
 
 Formula to find the missing no= Last element+(k-count of missing numbers */

class Solution {
    public int findKthPositive(int[] arr, int k) {
            int n=arr.length;
            int left=0, right=n-1;
            int missing= Compute(arr[n-1],n);
        while(left<=right)
        {
           int mid=left+(right-left)/2;
           missing = Compute(arr[mid],mid+1);
            if(missing>=k) right=mid-1;
            else left=mid+1;
            
        }
        if(right==-1) return k;
        return arr[right]+(k-Compute(arr[right],right+1));
        
    }
    int Compute(int actual, int expected)
    {
        return actual-expected;
    }
}
