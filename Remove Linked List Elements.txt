/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        
      // First we'll take care of the condition in which the first node (head) itself is val
        
      while(head!=null && head.val==val)
      {
          head=head.next;
      }
        
    // Now we'll check for the other nodes
        
        ListNode CurrentNode = head;
        while(CurrentNode!=null && CurrentNode.next!=null)
        {
            if(CurrentNode.next.val==val)
            {
            CurrentNode.next=CurrentNode.next.next;
            }
        
        else
        {
            CurrentNode=CurrentNode.next;
        }
    }
        return head;
}
}