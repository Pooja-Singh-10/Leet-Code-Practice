/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
       
        
        ListNode dummyHead=new ListNode(0);
        ListNode l3=dummyHead;
        int carry=0;
        
        while(l1!=null || l2!=null)
        {
            int l1_val=(l1.val!= 0) ? l1.val : 0;
            int l2_val=(l2.val!= 0) ? l2.val : 0;
            
         
            int CurrSum= l1_val + l2_val + carry;
            carry= CurrSum/10;
            int LastDigit= CurrSum % 10;
            
            ListNode newNode = new ListNode(LastDigit);
            l3.next=newNode;
            
            if(l1!=null) l1=l1.next;
            
            if(l2!=null) l2=l2.next;
            
            l3=l3.next;
            
        }
        
        if(carry>0)
        {
            ListNode NewNode = new ListNode(carry);
            l3.next=NewNode;
            l3=l3.next;
        }
        
        return dummyHead.next;
            
        }
        
}
