/*
ALGORITHM:

1. Traverse array in backwards direction.
2. Find the index i for which nums[i]<nums[i+1]--index 1.
3. Again travrese through  the array in backwards direction and find the index whose value is greater than the value and index 1. This would be index 2.
4. Swap nums[index 1] and nums[index2].
5. Reverse the digits starting from nums[index+1] till last.

*/

class Solution {
    public void nextPermutation(int[] nums) {
        
        if(nums!=null && nums.length<=1)
        {
            return;
        }
        
        int i=nums.length-2;
        
        while(i>=0 && nums[i]>=nums[i+1])
        {
            i--;
        }
        
        if(i>=0)
        {
            int j=nums.length-1;
            while(nums[j]<=nums[i])j--;
            swap(nums,i,j);
        }
        reverse(nums,i+1,nums.length-1);
    }
    
     public void swap(int[] nums, int i, int j)
    {
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
   public void reverse(int[] nums, int i, int j)
    {
        while(i<j) 
        {
            swap(nums,i++,j--);
        }
    }
}
