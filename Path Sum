/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   
public boolean hasPathSum(TreeNode root, int sum) {
	 if(root==null)
        {
            return false;
        }
	       // As we traverse through the tree, we are gonna subtarct teh value of every node from the sum. So, in the end, if the leaf node becomes same as sum, it means the tree has the path sum
        if((root.val==sum) && (root.left==null && root.right==null))
           {
              return true; 
           }

            return hasPathSum(root.left,sum-root.val) || hasPathSum(root.right,sum-root.val);
}
}
